<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceProcess.ServiceController</name>
  </assembly>
  <members>
    <member name="T:System.ServiceProcess.ServiceController">
      <summary>Представляет службу Windows и позволяет подключаться к запущенной или остановленной службе, управлять работой службы и получать сведения о ней.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceProcess.ServiceController" />, связанный с существующей службой на локальном компьютере.</summary>
      <param name="name">Имя, определяющее службу для системы.Это также может быть отображаемое имя службы.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is invalid. </exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceProcess.ServiceController" />, связанный с существующей службой на заданном компьютере.</summary>
      <param name="name">Имя, определяющее службу для системы.Это также может быть отображаемое имя службы.</param>
      <param name="machineName">Компьютер, на котором находится служба. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is invalid.-or- <paramref name="machineName" /> is invalid. </exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanPauseAndContinue">
      <summary>Получает значение, показывающее, возможны ли приостановка и возобновление работы службы.</summary>
      <returns>true, если работу службы можно приостановить; в противном случае — false.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanShutdown">
      <summary>Получает значение, показывающее, необходимо ли уведомлять службу о завершении работы системы.</summary>
      <returns>true, если служба должна получать уведомление о завершении работы системы; в противном случае — false.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanStop">
      <summary>Получает значение, определяющее, возможен ли останов службы после ее запуска.</summary>
      <returns>true, если возможны останов службы и вызов метода <see cref="M:System.ServiceProcess.ServiceBase.OnStop" />; в противном случае — false.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Continue">
      <summary>Возобновляет работу службы после ее приостановки.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.DependentServices">
      <summary>Получает набор служб, который зависит от службы, связанной с данным экземпляром <see cref="T:System.ServiceProcess.ServiceController" />.</summary>
      <returns>Массив экземпляров <see cref="T:System.ServiceProcess.ServiceController" />, каждый из которых связан со службой, зависящей от данной службы.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.DisplayName">
      <summary>Получает или задает понятное имя службы.</summary>
      <returns>Понятное имя службы, которое может использоваться для ее идентификации.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.ServiceProcess.ServiceController.DisplayName" /> is null. </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Dispose"></member>
    <member name="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые (а при необходимости и управляемые) ресурсы, используемые объектом <see cref="T:System.ServiceProcess.ServiceController" />. </summary>
      <param name="disposing">Значение true позволяет освободить управляемые и неуправляемые ресурсы; значение false позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetDevices">
      <summary>Загружает службы драйверов устройств на локальном компьютере.</summary>
      <returns>Массив типа <see cref="T:System.ServiceProcess.ServiceController" />, каждый элемент которого связан со службой драйвера устройства на локальном компьютере.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
      <summary>Загружает службы драйверов устройств на указанном компьютере.</summary>
      <returns>Массив типа <see cref="T:System.ServiceProcess.ServiceController" />, каждый элемент которого связан со службой драйвера устройства на заданном компьютере.</returns>
      <param name="machineName">Компьютер, с которого должны быть загружены службы драйверов устройств. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter has invalid syntax. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetServices">
      <summary>Загружает все службы на локальном компьютере, за исключением служб драйверов устройств.</summary>
      <returns>Массив типа <see cref="T:System.ServiceProcess.ServiceController" />, каждый элемент которого связан со службой на локальном компьютере.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
      <summary>Загружает все службы на указанном компьютере, за исключением служб драйверов устройств.</summary>
      <returns>Массив типа <see cref="T:System.ServiceProcess.ServiceController" />, каждый элемент которого связан со службой на заданном компьютере.</returns>
      <param name="machineName">Компьютер, с которого должны быть загружены службы. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter has invalid syntax. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.MachineName">
      <summary>Получает или задает имя компьютера, на котором находится данная служба.</summary>
      <returns>Имя компьютера, на котором работает служба, связанная с данным экземпляром <see cref="T:System.ServiceProcess.ServiceController" />.Значение по умолчанию — локальный компьютер (".").</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.ServiceProcess.ServiceController.MachineName" /> syntax is invalid. </exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Pause">
      <summary>Приостанавливает работу службы.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Refresh">
      <summary>Обновляет значения свойств текущими значениями.</summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceHandle">
      <summary>Получает дескриптор службы.</summary>
      <returns>Свойство <see cref="T:System.Runtime.InteropServices.SafeHandle" />, содержащее дескриптор для службы. </returns>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceName">
      <summary>Получает или задает имя, определяющее службу, на которую ссылается данный экземпляр.</summary>
      <returns>Имя, определяющее службу, на которую ссылается данный экземпляр <see cref="T:System.ServiceProcess.ServiceController" />.Значение по умолчанию — пустая строка (““).</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.ServiceProcess.ServiceController.ServiceName" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The syntax of the <see cref="P:System.ServiceProcess.ServiceController.ServiceName" /> property is invalid. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
      <summary>Набор служб, от которых зависит данная служба.</summary>
      <returns>Массив экземпляров <see cref="T:System.ServiceProcess.ServiceController" />, каждый из которых связан со службой, которая должна быть запущена для запуска данной службы.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceType">
      <summary>Получает тип службы, на которую ссылается данный объект.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceProcess.ServiceType" />, используемое для определения типа сетевой службы.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Start">
      <summary>Запускает службу без передачи аргументов.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Start(System.String[])">
      <summary>Запускает службу, передавая заданные аргументы.</summary>
      <param name="args">Массив аргументов для передачи в службу при ее запуске. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service cannot be started. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> is null.-or-A member of the array is null.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.Status">
      <summary>Получает состояние службы, на которую ссылается данный объект.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceProcess.ServiceControllerStatus" />, определяющее состояние службы: запущена ли она, остановлена, приостановлена, а также ожидаются ли команды запуска, останова, паузы или возобновления работы службы.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Stop">
      <summary>Останавливает данную службу и все зависящие от нее службы.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
      <summary>Постоянно ожидает достижения службой указанного состояния.</summary>
      <param name="desiredStatus">Ожидаемое состояние. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="desiredStatus" /> parameter is not any of the values defined in the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> enumeration. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
      <summary>Ожидает достижения службой заданного состояния или истечения заданного тайм-аута.</summary>
      <param name="desiredStatus">Ожидаемое состояние. </param>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, определяющий временной интервал, в течение которого ожидается достижение службой заданного состояния. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="desiredStatus" /> parameter is not any of the values defined in the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> enumeration. </exception>
      <exception cref="T:System.ServiceProcess.TimeoutException">The value specified for the <paramref name="timeout" /> parameter expires. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerStatus">
      <summary>Показывает текущее состояние службы.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.ContinuePending">
      <summary>Ожидается возобновление работы службы.Это соответствует константе SERVICE_CONTINUE_PENDING Win32, заданной равной 0x00000005.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Paused">
      <summary>Служба приостановлена.Это соответствует константе SERVICE_PAUSED Win32, заданной равной 0x00000007.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.PausePending">
      <summary>Ожидается приостановка службы.Это соответствует константе SERVICE_PAUSE_PENDING Win32, заданной равной 0x00000006.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Running">
      <summary>Служба запущена.Это соответствует константе SERVICE_RUNNING Win32, заданной равной 0x00000004.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.StartPending">
      <summary>Служба запускается.Это соответствует константе SERVICE_START_PENDING Win32, заданной равной 0x00000002.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Stopped">
      <summary>Служба не запущена.Это соответствует константе SERVICE_STOPPED Win32, заданной равной 0x00000001.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.StopPending">
      <summary>Служба останавливается.Это соответствует константе SERVICE_STOP_PENDING Win32, заданной равной 0x00000003.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceStartMode">
      <summary>Показывает режим запуска службы.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Automatic">
      <summary>Показывает, что служба запускается (или была запущена) операционной системой при запуске.Если служба, запускаемая автоматически, зависит от службы, запускаемой вручную, последняя также запускается автоматически при запуске системы.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Disabled">
      <summary>Показывает, что служба отключена и не может быть запущена пользователем или приложением.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Manual">
      <summary>Показывает, что служба запускается только вручную — пользователем (с помощью диспетчера служб) или приложением.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceType">
      <summary>Представляет тип службы.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Adapter">
      <summary>Служба для устройства, требующего собственного драйвера.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.FileSystemDriver">
      <summary>Драйвер файловой системы, который является и драйвером устройства ядра.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.InteractiveProcess">
      <summary>Служба, взаимодействующая с рабочим столом.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.KernelDriver">
      <summary>Драйвер устройства ядра, например, жесткого диска, или другой драйвер устройства нижнего уровня.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.RecognizerDriver">
      <summary>Драйвер файловой системы, используемый при запуске системы для определения ее файловых систем.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Win32OwnProcess">
      <summary>Программа Win32, которая запускается контролером служб и подчиняется протоколу управления службами.Этот тип службы Win32 запускается самостоятельно.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Win32ShareProcess">
      <summary>Служба Win32, которая может работать совместно с другими службами Win32.</summary>
    </member>
    <member name="T:System.ServiceProcess.TimeoutException">
      <summary>Исключение, вызываемое по истечении заданного тайм-аута.</summary>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceProcess.TimeoutException" /> без текста сообщения.</summary>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceProcess.TimeoutException" /> с заданным текстом сообщения.</summary>
      <param name="message">Текст описания типа или источника исключения.</param>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceProcess.TimeoutException" /> с заданными текстом сообщения и внутренним исключением.</summary>
      <param name="message">Текст описания типа или источника исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. </param>
    </member>
  </members>
</doc>