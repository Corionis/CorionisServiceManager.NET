<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceProcess.ServiceController</name>
  </assembly>
  <members>
    <member name="T:System.ServiceProcess.ServiceController">
      <summary>Rappresenta un servizio Windows e consente di connettersi a un servizio in esecuzione o arrestato, manipolarlo o ottenere informazioni al riguardo.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceProcess.ServiceController" /> associata a un servizio esistente sul computer locale.</summary>
      <param name="name">Nome che identifica il servizio nel sistema.Può anche essere il nome visualizzato per il servizio.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is invalid. </exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceProcess.ServiceController" /> associata a un servizio esistente sul computer specificato.</summary>
      <param name="name">Nome che identifica il servizio nel sistema.Può anche essere il nome visualizzato per il servizio.</param>
      <param name="machineName">Computer in cui si trova il servizio. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is invalid.-or- <paramref name="machineName" /> is invalid. </exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanPauseAndContinue">
      <summary>Ottiene un valore che indica se il servizio può essere sospeso e riattivato.</summary>
      <returns>true se il servizio può essere sospeso; in caso contrario, false.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanShutdown">
      <summary>Ottiene un valore che indica se è necessario che il servizio riceva una notifica quando il sistema è in fase di arresto.</summary>
      <returns>true se è necessario che il servizio riceva una notifica quando il sistema è in fase di arresto; in caso contrario, false.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanStop">
      <summary>Ottiene un valore che indica se il servizio, una volta avviato, può essere arrestato.</summary>
      <returns>true se il servizio può essere arrestato e se può essere chiamato il metodo <see cref="M:System.ServiceProcess.ServiceBase.OnStop" />; in caso contrario, false.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Continue">
      <summary>Riprende un servizio dopo che è stato sospeso.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.DependentServices">
      <summary>Ottiene il set di servizi che dipende dal servizio associato a questa istanza di <see cref="T:System.ServiceProcess.ServiceController" />.</summary>
      <returns>Matrice di istanze di <see cref="T:System.ServiceProcess.ServiceController" />, ciascuna delle quali è associata a un servizio che dipende dal servizio corrente.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.DisplayName">
      <summary>Ottiene o imposta un nome descrittivo per il servizio.</summary>
      <returns>Nome descrittivo del servizio, che può essere usato per identificare il servizio.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.ServiceProcess.ServiceController.DisplayName" /> is null. </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Dispose"></member>
    <member name="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.ServiceProcess.ServiceController" /> e, facoltativamente, le risorse gestite. </summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite; false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetDevices">
      <summary>Recupera tutti i servizi del driver di dispositivo sul computer locale.</summary>
      <returns>Matrice di tipo <see cref="T:System.ServiceProcess.ServiceController" />, in cui ciascun elemento è associato a un servizio del driver di dispositivo sul computer locale.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
      <summary>Recupera i servizi del driver di dispositivo sul computer specificato.</summary>
      <returns>Matrice di tipo <see cref="T:System.ServiceProcess.ServiceController" />, in cui ciascun elemento è associato a un servizio del driver di dispositivo sul computer specificato.</returns>
      <param name="machineName">Computer da cui recuperare i servizi del driver di dispositivo. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter has invalid syntax. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetServices">
      <summary>Recupera tutti i servizi sul computer locale, fatta eccezione per i servizi del driver di dispositivo.</summary>
      <returns>Matrice di tipo <see cref="T:System.ServiceProcess.ServiceController" />, in cui ciascun elemento è associato a un servizio sul computer locale.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
      <summary>Recupera tutti i servizi sul computer specificato, fatta eccezione per i servizi del driver di dispositivo.</summary>
      <returns>Matrice di tipo <see cref="T:System.ServiceProcess.ServiceController" />, in cui ciascun elemento è associato a un servizio sul computer specificato.</returns>
      <param name="machineName">Computer da cui recuperare i servizi. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter has invalid syntax. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.MachineName">
      <summary>Ottiene o imposta il nome del computer su cui si trova il servizio.</summary>
      <returns>Nome del computer sul quale è in esecuzione il servizio associato a questa istanza di <see cref="T:System.ServiceProcess.ServiceController" />.Il valore predefinito è il computer locale (".").</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.ServiceProcess.ServiceController.MachineName" /> syntax is invalid. </exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Pause">
      <summary>Sospende il funzionamento di un servizio.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Refresh">
      <summary>Aggiorna i valori delle proprietà reimpostando le proprietà sui valori correnti.</summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceHandle">
      <summary>Ottiene l'handle del servizio.</summary>
      <returns>Oggetto <see cref="T:System.Runtime.InteropServices.SafeHandle" /> contenente l'handle del servizio. </returns>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceName">
      <summary>Ottiene o imposta il nome che identifica il servizio a cui l'istanza fa riferimento.</summary>
      <returns>Nome che identifica il servizio a cui questa istanza di <see cref="T:System.ServiceProcess.ServiceController" /> fa riferimento.Il valore predefinito è una stringa vuota ("").</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.ServiceProcess.ServiceController.ServiceName" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The syntax of the <see cref="P:System.ServiceProcess.ServiceController.ServiceName" /> property is invalid. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
      <summary>Set di servizi da cui dipende questo servizio.</summary>
      <returns>Matrice di istanze di <see cref="T:System.ServiceProcess.ServiceController" />, ciascuna delle quali è associata a un servizio che deve essere in esecuzione per eseguire questo servizio.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceType">
      <summary>Ottiene il tipo di servizio a cui fa riferimento questo oggetto.</summary>
      <returns>Uno dei valori di <see cref="T:System.ServiceProcess.ServiceType" /> usati per indicare il tipo di servizio di rete.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Start">
      <summary>Avvia il servizio, senza passare argomenti.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Start(System.String[])">
      <summary>Avvia il servizio, passando gli argomenti specificati.</summary>
      <param name="args">Matrice di argomenti da passare al servizio quando viene avviato. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service cannot be started. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> is null.-or-A member of the array is null.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.Status">
      <summary>Ottiene lo stato del servizio a cui questa istanza fa riferimento.</summary>
      <returns>Uno dei valori di <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> che indica se il servizio è in esecuzione, arrestato o sospeso oppure se è in sospeso un comando di avvio, arresto, pausa o continuazione.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Stop">
      <summary>Arresta questo servizio e tutti i servizi da esso dipendenti.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
      <summary>Attende che il servizio raggiunga lo stato specificato senza limiti di tempo.</summary>
      <param name="desiredStatus">Stato da attendere. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="desiredStatus" /> parameter is not any of the values defined in the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> enumeration. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
      <summary>Attende che il servizio raggiunga lo stato specificato oppure la scadenza del timeout specificato.</summary>
      <param name="desiredStatus">Stato da attendere. </param>
      <param name="timeout">Oggetto <see cref="T:System.TimeSpan" /> che specifica il tempo di attesa prima che il servizio raggiunga lo stato specificato. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="desiredStatus" /> parameter is not any of the values defined in the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> enumeration. </exception>
      <exception cref="T:System.ServiceProcess.TimeoutException">The value specified for the <paramref name="timeout" /> parameter expires. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerStatus">
      <summary>Indica lo stato corrente del servizio.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.ContinuePending">
      <summary>La continuazione del servizio è in sospeso.Corrisponde alla costante SERVICE_CONTINUE_PENDING Win32, che è definita come 0x00000005.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Paused">
      <summary>Il servizio è in pausa.Corrisponde alla costante SERVICE_PAUSED Win32, che è definita come 0x00000007.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.PausePending">
      <summary>La pausa del servizio è in sospeso.Corrisponde alla costante SERVICE_PAUSE_PENDING Win32, che è definita come 0x00000006.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Running">
      <summary>Il servizio è in esecuzione.Corrisponde alla costante SERVICE_RUNNING Win32, che è definita come 0x00000004.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.StartPending">
      <summary>Il servizio è in fase di avvio.Corrisponde alla costante SERVICE_START_PENDING Win32, che è definita come 0x00000002.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Stopped">
      <summary>Il servizio non è in esecuzione.Corrisponde alla costante SERVICE_STOPPED Win32, che è definita come 0x00000001.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.StopPending">
      <summary>Il servizio è in fase di interruzione.Corrisponde alla costante SERVICE_STOP_PENDING Win32, che è definita come 0x00000003.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceStartMode">
      <summary>Indica la modalità di avvio del servizio.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Automatic">
      <summary>Indica che è necessario che il servizio venga avviato (o è stato avviato) dal sistema operativo al momento dell'avvio del sistema.Se un servizio ad avvio automatico dipende da un servizio ad avvio manuale, anche quest'ultimo verrà avviato automaticamente all'avvio del sistema.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Disabled">
      <summary>Indica che il servizio è disabilitato e pertanto non può essere avviato da un utente o da un'applicazione.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Manual">
      <summary>Indica che il servizio può essere avviato solo manualmente da un'utente (mediante Gestione controllo servizi) o da un'applicazione.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceType">
      <summary>Rappresenta il tipo del servizio.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Adapter">
      <summary>Servizio per una periferica che richiede un driver apposito.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.FileSystemDriver">
      <summary>Driver del file system, che è anche un driver di periferica Kernel.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.InteractiveProcess">
      <summary>Servizio in grado di comunicare con il desktop.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.KernelDriver">
      <summary>Driver di periferica Kernel, ad esempio il driver del disco rigido o di un'altra periferica di basso livello.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.RecognizerDriver">
      <summary>Driver di file system utilizzato durante l'avvio per determinare i file system presenti nel sistema.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Win32OwnProcess">
      <summary>Programma Win32 che può essere avviato dal Service Controller e che obbedisce al protocollo di controllo del servizio.Questo tipo di servizio Win32 viene eseguito autonomamente in un processo.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Win32ShareProcess">
      <summary>Servizio Win32 che può condividere un processo con altri servizi Win32.</summary>
    </member>
    <member name="T:System.ServiceProcess.TimeoutException">
      <summary>Eccezione generata alla scadenza del timeout specificato.</summary>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceProcess.TimeoutException" /> senza testo del messaggio.</summary>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceProcess.TimeoutException" /> con il testo del messaggio specificato.</summary>
      <param name="message">Testo che descrive il tipo o l'origine dell'eccezione.</param>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceProcess.TimeoutException" /> con il testo del messaggio e l'eccezione interna specificati.</summary>
      <param name="message">Testo che descrive il tipo o l'origine dell'eccezione.</param>
      <param name="innerException">Eccezione che ha causato l'eccezione corrente. </param>
    </member>
  </members>
</doc>