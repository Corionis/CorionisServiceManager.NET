<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceProcess.ServiceController</name>
  </assembly>
  <members>
    <member name="T:System.ServiceProcess.ServiceController">
      <summary>Représente un service Windows et vous permet de vous connecter à un service en cours d'exécution ou arrêté, de le manipuler ou d'obtenir des informations le concernant.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceProcess.ServiceController" /> qui n'est associée à aucun service existant sur l'ordinateur local.</summary>
      <param name="name">Nom qui identifie le service sur le système.Il peut aussi s'agir du nom complet du service.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is invalid. </exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceProcess.ServiceController" /> qui n'est associée à aucun service existant sur l'ordinateur spécifié.</summary>
      <param name="name">Nom qui identifie le service sur le système.Il peut aussi s'agir du nom complet du service.</param>
      <param name="machineName">Ordinateur sur lequel le service réside. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is invalid.-or- <paramref name="machineName" /> is invalid. </exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanPauseAndContinue">
      <summary>Obtient une valeur indiquant s'il est possible de suspendre et de reprendre le service.</summary>
      <returns>true si le service peut être suspendu ; sinon, false.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanShutdown">
      <summary>Obtient une valeur indiquant si le service doit être averti de l'arrêt du système.</summary>
      <returns>true si le service doit être averti de l'arrêt du système ; sinon, false.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanStop">
      <summary>Obtient une valeur indiquant si le service peut être arrêté après avoir démarré.</summary>
      <returns>true si le service peut être arrêté et la méthode <see cref="M:System.ServiceProcess.ServiceBase.OnStop" /> appelée ; sinon, false.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Continue">
      <summary>Continue un service après qu'il a été suspendu.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.DependentServices">
      <summary>Obtient le jeu de services qui dépend du service associé à cette instance de <see cref="T:System.ServiceProcess.ServiceController" />.</summary>
      <returns>Tableau d'instances de <see cref="T:System.ServiceProcess.ServiceController" />, dont chacune est associée à un service qui dépend de ce service.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.DisplayName">
      <summary>Obtient ou définit un nom convivial pour le service.</summary>
      <returns>Nom convivial du service, qui peut servir à identifier celui-ci.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.ServiceProcess.ServiceController.DisplayName" /> is null. </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Dispose"></member>
    <member name="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.ServiceProcess.ServiceController" /> et libère éventuellement les ressources managées. </summary>
      <param name="disposing">true pour libérer les ressources managées et non managées ; false pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetDevices">
      <summary>Récupère les services de pilotes de périphériques sur l'ordinateur local.</summary>
      <returns>Tableau de type <see cref="T:System.ServiceProcess.ServiceController" /> dans lequel chaque élément est associé à un service de pilotes de périphériques sur l'ordinateur local.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
      <summary>Récupère les services de pilotes de périphériques sur l'ordinateur spécifié.</summary>
      <returns>Tableau de type <see cref="T:System.ServiceProcess.ServiceController" /> dans lequel chaque élément est associé à un service de pilotes de périphériques sur l'ordinateur spécifié.</returns>
      <param name="machineName">Ordinateur à partir duquel les services de pilotes de périphériques doivent être récupérés. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter has invalid syntax. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetServices">
      <summary>Récupère tous les services sur l'ordinateur local, sauf les services de pilotes de périphériques.</summary>
      <returns>Tableau de type <see cref="T:System.ServiceProcess.ServiceController" /> dans lequel chaque élément est associé à un service sur l'ordinateur local.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
      <summary>Récupère tous les services sur l'ordinateur spécifié, sauf les services de pilotes de périphériques.</summary>
      <returns>Tableau de type <see cref="T:System.ServiceProcess.ServiceController" /> dans lequel chaque élément est associé à un service sur l'ordinateur spécifié.</returns>
      <param name="machineName">Ordinateur à partir duquel les services doivent être récupérés. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter has invalid syntax. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.MachineName">
      <summary>Obtient ou définit le nom de l'ordinateur sur lequel ce service réside.</summary>
      <returns>Nom de l'ordinateur qui exécute le service associé à cette instance de <see cref="T:System.ServiceProcess.ServiceController" />.La valeur par défaut est l'ordinateur local (".").</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.ServiceProcess.ServiceController.MachineName" /> syntax is invalid. </exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Pause">
      <summary>Interrompt le fonctionnement d'un service.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Refresh">
      <summary>Actualise les valeurs de propriété en réinitialisant les propriétés à leurs valeurs actuelles.</summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceHandle">
      <summary>Obtient le handle du service.</summary>
      <returns>
        <see cref="T:System.Runtime.InteropServices.SafeHandle" /> qui contient le handle du service. </returns>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceName">
      <summary>Obtient ou définit le nom qui identifie le service référencé par cette instance.</summary>
      <returns>Nom qui identifie le service référencé par l'instance de <see cref="T:System.ServiceProcess.ServiceController" />.La valeur par défaut est une chaîne vide ("").</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.ServiceProcess.ServiceController.ServiceName" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The syntax of the <see cref="P:System.ServiceProcess.ServiceController.ServiceName" /> property is invalid. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
      <summary>Jeu de services dont ce service dépend.</summary>
      <returns>Tableau d'instances de <see cref="T:System.ServiceProcess.ServiceController" />, dont chacune est associée à un service qui doit être en cours d'exécution pour que ce service soit exécuté.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceType">
      <summary>Obtient le type de service auquel cet objet fait référence.</summary>
      <returns>Une des valeurs <see cref="T:System.ServiceProcess.ServiceType" /> utilisée pour indiquer le type de service réseau.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Start">
      <summary>Démarre le service sans passer d'arguments.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Start(System.String[])">
      <summary>Démarre un service en passant les arguments spécifiés.</summary>
      <param name="args">Tableau d'arguments à passer au service au moment où il démarre. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service cannot be started. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> is null.-or-A member of the array is null.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.Status">
      <summary>Obtient l'état du service auquel cette instance fait référence.</summary>
      <returns>Une des valeurs de <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> qui indique si le service est en cours d'exécution, arrêté ou suspendu, ou encore si une commande Démarrer, Arrêter, Suspendre ou Continuer est en attente.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found.</exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Stop">
      <summary>Arrête ce service et tous les services qui en dépendent.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API. </exception>
      <exception cref="T:System.InvalidOperationException">The service was not found. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
      <summary>Attend indéfiniment que le service atteigne l'état spécifié.</summary>
      <param name="desiredStatus">État qu'il faut attendre. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="desiredStatus" /> parameter is not any of the values defined in the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> enumeration. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
      <summary>Attend que le service atteigne l'état spécifié ou l'expiration du délai d'attente spécifié.</summary>
      <param name="desiredStatus">État qu'il faut attendre. </param>
      <param name="timeout">Objet <see cref="T:System.TimeSpan" /> spécifiant le temps d'attente avant que le service n'atteigne l'état spécifié. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="desiredStatus" /> parameter is not any of the values defined in the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> enumeration. </exception>
      <exception cref="T:System.ServiceProcess.TimeoutException">The value specified for the <paramref name="timeout" /> parameter expires. </exception>
      <PermissionSet>
        <IPermission class="System.ServiceProcess.ServiceControllerPermission, System.ServiceProcess, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerStatus">
      <summary>Indique l'état actuel du service.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.ContinuePending">
      <summary>Le service est en attente.Cela correspond à la constante Win32 SERVICE_CONTINUE_PENDING qui est définie comme 0x00000005.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Paused">
      <summary>Le service est suspendu.Cela correspond à la constante Win32 SERVICE_PAUSED qui est définie comme 0x00000007.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.PausePending">
      <summary>La suspension du service est en attente.Cela correspond à la constante Win32 SERVICE_PAUSE_PENDING qui est définie comme 0x00000006.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Running">
      <summary>Le service est en cours d'exécution.Cela correspond à la constante Win32 SERVICE_RUNNING qui est définie comme 0x00000004.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.StartPending">
      <summary>Le service est en cours de démarrage.Cela correspond à la constante Win32 SERVICE_START_PENDING qui est définie comme 0x00000002.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Stopped">
      <summary>Le service n'est pas en cours d'exécution.Cela correspond à la constante Win32 SERVICE_STOPPED qui est définie comme 0x00000001.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.StopPending">
      <summary>Le service est en cours d'arrêt.Cela correspond à la constante Win32 SERVICE_STOP_PENDING qui est définie comme 0x00000003.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceStartMode">
      <summary>Indique le mode de démarrage du service.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Automatic">
      <summary>Indique que le service est démarré (ou a été démarré) par le système d'exploitation, lors de son initialisation.Si un service démarré automatiquement dépend d'un service démarré manuellement, le service démarré manuellement est également démarré automatiquement au démarrage du système.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Disabled">
      <summary>Indique que le service est désactivé, de telle sorte qu'il ne puisse pas être démarré par un utilisateur ou une application.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Manual">
      <summary>Indique que le service est démarré manuellement uniquement, par un utilisateur (via le Gestionnaire de contrôle des services) ou par une application.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceType">
      <summary>Représente le type du service.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Adapter">
      <summary>Service d'un périphérique matériel qui requiert son propre pilote.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.FileSystemDriver">
      <summary>Pilote de système de fichiers, qui est également un pilote de périphérique de noyau.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.InteractiveProcess">
      <summary>Service qui peut communiquer avec le bureau.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.KernelDriver">
      <summary>Pilote de périphérique de noyau, tel qu'un disque dur, ou tout autre pilote de périphérique matériel de bas niveau.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.RecognizerDriver">
      <summary>Pilote de système de fichiers utilisé au démarrage pour identifier les systèmes de fichiers présents sur le système.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Win32OwnProcess">
      <summary>Programme Win32 qui peut être démarré par le Contrôleur de services et qui obéit au protocole de contrôle des services.Ce type de service Win32 s'exécute de lui-même dans un processus.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Win32ShareProcess">
      <summary>Service Win32 qui peut partager un processus avec d'autres services Win32.</summary>
    </member>
    <member name="T:System.ServiceProcess.TimeoutException">
      <summary>Exception levée lorsqu'un délai d'attente spécifié a expiré.</summary>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceProcess.TimeoutException" /> sans texte de message.</summary>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceProcess.TimeoutException" /> avec le texte de message spécifié.</summary>
      <param name="message">Texte qui décrit le type ou la source de l'exception.</param>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceProcess.TimeoutException" /> avec le texte du message et l'exception interne spécifiés.</summary>
      <param name="message">Texte qui décrit le type ou la source de l'exception.</param>
      <param name="innerException">Exception qui a provoqué l'exception actuelle. </param>
    </member>
  </members>
</doc>